<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!--Helper Bean to extract data from MQTT Topic and and to Message in csv values  -->
  	<bean id="myHelper" class="com.redhat.examples.iot.routingService.MyHelper" />
  	
  	<bean id="rules" class="com.redhat.examples.iot.routingService.BusinessRulesBean" init-method="init" />
  	
  	<!-- this is the JDBC data source which uses a PostgreSQL database -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    	<property name="driverClassName" value="org.postgresql.Driver"/>
    	<property name="url" value="jdbc:postgresql://${POSTGRESQL_SERVICE_HOST:localhost}:${POSTGRESQL_SERVICE_PORT:5432}/${POSTGRESQL_DATABASE:iot}"/>
    	<property name="username" value="${POSTGRESQL_USER}"/>
    	<property name="password" value="${POSTGRESQL_PASSWORD}"/>
    </bean>
  	
    
  	<!--Connection to activeMQ Broker running on same system  -->
  	<bean id="activemqGateway" class="org.apache.activemq.camel.component.ActiveMQComponent" >
    	<property name="connectionFactory">
      		<bean class="org.apache.activemq.ActiveMQConnectionFactory">
        		<property name="brokerURL" value="tcp://${BROKER_AMQ_TCP_SERVICE_HOST}:${BROKER_AMQ_TCP_SERVICE_PORT}" />
        		<property name="userName" value="${BROKER_AMQ_USERNAME}"/>
        		<property name="password" value="${BROKER_AMQ_PASSWORD}"/>
      		</bean>
    	</property>
  	</bean>
  	 
  	<!--Initiate access to properties -->
  	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

  <camelContext xmlns="http://camel.apache.org/schema/spring">
  
  <propertyPlaceholder id="properties" location="sql.properties"/>
    
  <dataFormats>
    <bindy type="Csv" classType="com.redhat.examples.iot.routingService.Measure" id="bindyDataFormat"/>
  </dataFormats>
  <route id="messagesFromSensor">
  <from uri="mqtt:mqtt.temp.receiver?host=tcp://{{env:BROKER_AMQ_MQTT_SERVICE_HOST}}:{{env:BROKER_AMQ_MQTT_SERVICE_PORT}}&amp;subscribeTopicNames=iot-ose/#/#/#&amp;userName={{env:BROKER_AMQ_USERNAME}}&amp;password={{env:BROKER_AMQ_PASSWORD}}"/>
    <bean ref="myHelper" method="enhanceMessage" beanType="com.redhat.examples.iot.routingService.MyHelper"/>
    <unmarshal ref="bindyDataFormat"/>
    <log message="Mesaure of type ${body.dataType} received with value ${body.payload}"/>
    <convertBodyTo type="java.lang.String"/>
    <to uri="activemqGateway:queue:message.to.rules"/>
  </route>
  

  <route id="processRules">
  <from uri="activemqGateway:queue:message.to.rules"/>
  <bean ref="rules" method="processRules"/>
  <choice>
  	<when>
  		<simple>${body.errorCode} != 0</simple>
  		<log message="${body.dataType} Exceeds Threashold: ${body.errorMessage}"/>
  	</when>
  	<otherwise>
  	</otherwise>
  </choice>
  <bean ref="myHelper" method="prepareJdbcHeaders"/>
  <setBody>
  	<constant>{{sql.insertMeasure}}</constant>
  </setBody>
  <to uri="jdbc:dataSource?useHeadersAsParameters=true"/>
  </route>
  
</camelContext>

</beans>